/* -*- Mode: C; indent-tabs-mode: t; c-basic-offset: 4; tab-width: 4 -*- */
/*
 * callbacks.h
 * Copyright (C) Ricard Pradell 2010 <rpradell@uoc.edu>
 * 
 * dumbado is free software: you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the
 * Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * dumbado is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License along
 * with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <gtk/gtk.h>

/* parametres per defecte */
#define DEF_ARGUMENTS 3
#define DEF_INTERFICIE "any"
#define DEF_FILTRE ""
#define DEF_NUMPAQUETS "-1"

/* limits dels char* dels parametres */
#define MAX_INTERFICIE 10 
#define MAX_FILTRE 1000
#define MAX_NUMPAQUETS 100

#define GLADE_FILE "nose.glade"

/* Estructura de pas de par√†metres */
struct st_parametres{
	int arguments;
	char interficie[MAX_INTERFICIE];
	char filtre[MAX_FILTRE];
	char numPaquets[MAX_NUMPAQUETS];
};

/* bucle de captura */
int bucle_captura (int argc, char *interficie, char *filtre, char *num_paquets);

/* gestio d'errors i missatges */
void gest_err_msg (const char *msg);

/* presenta un dialeg per guardar un fitxer, retorna el nom del fitxer */
gchar *quin_fitxer (void);

/* ja tenim un nom de fitxer i volem guardar el contingut del textview */
void escriu_fitxer (gchar *nom_fitxer);

void atura_loop(void);
void posa_a_zero(void);
void tusi_tuno (void);
int f_pas_parametres(struct st_parametres *parametres);
void mata_pcap(void);
unsigned long long  get_num_paquets(void);
void button_inicia_clicat (GtkWidget *widget, gpointer window);
void button_finalitza_clicat (GtkWidget *widget, gpointer window);
void on_menu_desa_activate(void);
void on_menu_surt_activate(void);
void on_menu_quanta_activate (GtkWidget *window);
gint delete_event( GtkWidget *widget,
                   GdkEvent  *event,
                   gpointer   data );
void on_window_destroy (GtkObject *object, gpointer user_data);